name: Build and Release (on GitHub only)

on:
  # when a push is made to the main branch (like when a pull request is merged, or something is pushed directly)
  workflow_dispatch:
  push:
    branches: [ "main", "pr/adisidev/201" ]

env:
  BUILD_TYPE: Release

jobs:

  set-outputs:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Calculate short_sha
      id: vars
      run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  build-and-upload:

    runs-on: ubuntu-latest
    needs: set-outputs
    container:
      image: gocartio/cartogram-web:latest
    steps:

    - name: Install Dependencies
      run: |
        apt update -y
        apt install -y git g++-11 build-essential cmake libboost-all-dev

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
          submodules: 'recursive'
          fetch-depth: 0

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DRELEASE_TAG=${{ needs.set-outputs.outputs.short_sha }}

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target install -j$(nproc) --

    # - name: Run CTest
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}

    # - name: Run Stress Test
    #   run: |
    #     sudo make install -C build
    #     cd tests/
    #     chmod +x stress_test.sh
    #     bash stress_test.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cartogram
        path: /usr/local/bin/cartogram

  release:

    runs-on: ubuntu-latest
    needs: [build-and-upload, set-outputs]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: cartogram

    - name: Push short_sha Tag
      uses: actions-ecosystem/action-push-tag@v1
      with:
        tag: ${{ needs.set-outputs.outputs.short_sha }}

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.set-outputs.outputs.short_sha }}
        files: cartogram
        body: "Rolling release ${{ needs.set-outputs.outputs.short_sha }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}